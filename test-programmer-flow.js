// Teste para verificar o fluxo de captura do isProgrammer
const { saveLeadToSupabase } = require('./lib/supabase-client.js');

async function testProgrammerFlow() {
  console.log('üß™ TESTANDO FLUXO DE CAPTURA isProgrammer');
  console.log('=' .repeat(60));
  
  // Teste 1: Usu√°rio que √â programador
  console.log('\nüìù TESTE 1: Usu√°rio √â PROGRAMADOR (SIM)');
  const testLeadProgrammer = {
    email: `programmer.test.${Date.now()}@aicodepro.com`,
    phone: '(11) 99999-1111',
    is_programmer: true, // DEVERIA ser TRUE
    utm_source: 'teste-programmer',
    utm_medium: 'script',
    utm_campaign: 'verificacao-fluxo',
    ip_address: '127.0.0.1',
    user_agent: 'Test Script'
  };
  
  try {
    const result1 = await saveLeadToSupabase(testLeadProgrammer);
    console.log('‚úÖ Resultado programador:', result1.success ? 'SUCESSO' : 'ERRO');
    if (result1.success) {
      console.log('üìä is_programmer salvo como:', result1.data.is_programmer);
    }
  } catch (error) {
    console.error('‚ùå Erro teste programador:', error.message);
  }
  
  // Teste 2: Usu√°rio que N√ÉO √© programador
  console.log('\nüìù TESTE 2: Usu√°rio N√ÉO √â PROGRAMADOR (N√ÉO)');
  const testLeadNotProgrammer = {
    email: `notprogrammer.test.${Date.now()}@aicodepro.com`,
    phone: '(11) 99999-2222',
    is_programmer: false, // DEVERIA ser FALSE
    utm_source: 'teste-notprogrammer',
    utm_medium: 'script',
    utm_campaign: 'verificacao-fluxo',
    ip_address: '127.0.0.1',
    user_agent: 'Test Script'
  };
  
  try {
    const result2 = await saveLeadToSupabase(testLeadNotProgrammer);
    console.log('‚úÖ Resultado n√£o-programador:', result2.success ? 'SUCESSO' : 'ERRO');
    if (result2.success) {
      console.log('üìä is_programmer salvo como:', result2.data.is_programmer);
    }
  } catch (error) {
    console.error('‚ùå Erro teste n√£o-programador:', error.message);
  }
  
  // Teste 3: Simula√ß√£o do que vem do frontend
  console.log('\nüìù TESTE 3: SIMULA√á√ÉO FRONTEND (isProgrammer === true)');
  const frontendData = {
    email: `frontend.test.${Date.now()}@aicodepro.com`,
    phone: '(11) 99999-3333',
    is_programmer: true === true, // Como o frontend envia
    utm_source: 'teste-frontend',
    utm_medium: 'script',
    utm_campaign: 'verificacao-fluxo',
    ip_address: '127.0.0.1',
    user_agent: 'Test Script'
  };
  
  console.log('üîç Valor enviado pelo frontend:', frontendData.is_programmer, typeof frontendData.is_programmer);
  
  try {
    const result3 = await saveLeadToSupabase(frontendData);
    console.log('‚úÖ Resultado frontend:', result3.success ? 'SUCESSO' : 'ERRO');
    if (result3.success) {
      console.log('üìä is_programmer salvo como:', result3.data.is_programmer);
    }
  } catch (error) {
    console.error('‚ùå Erro teste frontend:', error.message);
  }
  
  console.log('\n' + '='.repeat(60));
  console.log('üèÅ TESTE FLUXO isProgrammer CONCLU√çDO');
  console.log('\nüîç VERIFICAR NO SUPABASE:');
  console.log('- programmer.test.* ‚Üí is_programmer = TRUE');
  console.log('- notprogrammer.test.* ‚Üí is_programmer = FALSE');
  console.log('- frontend.test.* ‚Üí is_programmer = TRUE');
}

testProgrammerFlow();
